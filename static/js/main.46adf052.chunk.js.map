{"version":3,"sources":["logo.svg","images/note2.png","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","input","setInput","data","setData","toggle","setToggle","itemid","setItemid","additem","map","ele","id","name","allinput","Date","getTime","toString","alert","className","src","note","alt","type","placeholder","value","onChange","e","target","onClick","title","item","ind","edititem","find","update","filter","deleteitem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,I,iCCAA,MAA0B,kCC4F1BA,EAzFF,WACT,MAAuBC,qBAAvB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAqBF,mBAAS,IAA9B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAyBJ,oBAAS,GAAlC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAyBN,mBAAS,MAAlC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAQ,WACV,GAAIR,EAGC,GAAGA,IAAUI,EACdD,EACID,EAAKO,KAAI,SAACC,GACN,OAAGA,EAAIC,KAAKL,EACR,2BACOJ,GADP,IACYU,KAAKZ,IAGdU,MAGfL,GAAU,GACVJ,EAAS,IACTM,EAAU,UAEV,CACA,IAAMM,EAAS,CAACF,IAAG,IAAIG,MAAOC,UAAUC,WAAWJ,KAAKZ,GACxDG,EAAQ,GAAD,mBAAKD,GAAL,CAAUW,KACjBZ,EAAS,SApBTgB,MAAM,qBA4Cd,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,qDAEJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,WAAWC,MAAOxB,EAAOyB,SAAU,SAACC,GAAD,OAAKzB,EAASyB,EAAEC,OAAOH,UAErFpB,EAAS,mBAAGc,UAAU,aAAaU,QAASpB,EAASqB,MAAM,aAE3D,mBAAGX,UAAU,aAAaU,QAASpB,EAASqB,MAAM,iBAG1D,qBAAKX,UAAU,YAAf,SACKhB,EAAKO,KAAI,SAACqB,GACP,OACI,sBAAKZ,UAAU,WAAf,UACI,6BAAKY,EAAKlB,OACV,sBAAKM,UAAU,WAAf,UACI,mBAAGA,UAAU,aAAaW,MAAM,OAAOD,QAAS,kBA/BrE,SAACG,GACZ,IAAIC,EAAS9B,EAAK+B,MAAK,SAACvB,GACpB,OAAOA,EAAIC,KAAKoB,KAEpB1B,GAAU,GACVJ,EAAS+B,EAASpB,MAClBL,EAAUyB,EAASrB,IAyBiEqB,CAASF,EAAKnB,OAClE,mBAAGO,UAAU,sBAAsBW,MAAM,cAAcD,QAAS,kBA1CnF,SAACG,GACd,IAAMG,EAAOhC,EAAKiC,QAAO,SAACzB,GACtB,OAAOqB,IAAMrB,EAAIC,MAErBR,EAAQ+B,GAsC4FE,CAAWN,EAAKnB,YAJ7DmB,EAAKnB,SAUhD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAemB,oBAAkB,aAAaT,QA3CpE,WACZzB,EAAQ,KA0CQ,SAAoF,0D,MCxE7FmC,MAPf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46adf052.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/note2.26b6ca0f.png\";","import React, { useState } from \"react\"\r\nimport fire from \"../images/fire.png\"\r\nimport note from '../images/note2.png'\r\nconst Todo = () => {\r\n    const [input,setInput]=useState()\r\n    const [data,setData]=useState([])\r\n    const [toggle,setToggle]=useState(true)\r\n    const [itemid,setItemid]=useState(null)\r\n    const additem=()=>{\r\n        if(!input){\r\n            alert(\"Enter some value\")\r\n        }\r\n        else if(input && !toggle){\r\n            setData(\r\n                data.map((ele)=>{\r\n                    if(ele.id===itemid){\r\n                        return{\r\n                            ...data,name:input\r\n                        }\r\n                    }\r\n                    return ele;\r\n                })\r\n            )\r\n            setToggle(true);\r\n            setInput(\"\");\r\n            setItemid(null);\r\n        }\r\n        else{\r\n            const allinput={id:new Date().getTime().toString(),name:input}\r\n            setData([...data,allinput]);\r\n            setInput('')\r\n        }\r\n    }\r\n\r\n\r\n    const deleteitem=(ind)=>{\r\n        const update=data.filter((ele)=>{\r\n            return ind!==ele.id;\r\n        })\r\n        setData(update);\r\n    }\r\n    const removeall=()=>{\r\n        setData([]);\r\n    }\r\n\r\n    const edititem=(ind)=>{\r\n        let edititem=data.find((ele)=>{\r\n            return ele.id===ind;\r\n        })\r\n        setToggle(false)\r\n        setInput(edititem.name)\r\n        setItemid(edititem.id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={note} alt=\"todo\" />\r\n                        <figcaption>Add Here</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Add item\" value={input} onChange={(e)=>setInput(e.target.value)} />\r\n                        {\r\n                            toggle ? <i className=\"fa fa-plus\" onClick={additem} title=\"Add Item\" /> \r\n                            :\r\n                            <i className=\"fa fa-edit\" onClick={additem} title=\"Edit Item\" />\r\n                        }\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {data.map((item)=>{\r\n                            return(\r\n                                <div className=\"eachItem\" key={item.id}>\r\n                                    <h3>{item.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                        <i className=\"fa fa-edit\" title=\"Edit\" onClick={()=>edititem(item.id)} />\r\n                                        <i className=\"fa fa-trash add-btn\" title=\"Delete Item\" onClick={()=>deleteitem(item.id)} />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"remove all\" onClick={removeall}><span>Check List</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import logo from './logo.svg';\nimport Tempapp from './components/Tempapp'\nimport Todo from \"./components/todo\"\nimport \"../src/components/css/todo.css\"\n\nfunction App() {\n  return (\n    <Todo />\n    // <Tempapp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}